{"version":3,"sources":["swatch-finder.svg","download.svg","upload.svg","App.js","helpers.js","Color.js","Header.js","serviceWorker.js","index.js"],"names":["module","exports","imgSrc","colorDelta","hex1","hex2","r1","parseInt","substring","g1","b1","r2","g2","b2","r","Math","abs","g","b","rgbToHex","rgb","toString","padStart","Color","hex","weight","React","useState","content","setContent","isMobile","window","innerWidth","size","min","emphasis","colorStyle","backgroundColor","height","width","onMouseOver","str","console","log","document","body","style","className","onClick","el","createElement","value","appendChild","select","execCommand","removeChild","copyToClipboard","setTimeout","Header","props","src","logo","alt","target","rel","href","hasImage","hidden","display","alignItems","justifyContent","flexDirection","onChange","changeSize","type","id","name","max","htmlFor","marginLeft","downloadImage","download","App","fileName","setFileName","colors","setColors","image","setImage","setSize","photoContainer","createRef","canvasRef","inputRef","processImg","useCallback","file","URL","createObjectURL","canvas","current","ctx","getContext","img","Image","onload","heightOrWidth","h","round","w","drawImage","imageSmoothingEnabled","colorArr","i","j","c","getImageData","data","color","push","length","color2","splice","weighColors","sort","x","y","slice","map","key","pixelate","useEffect","imageEl","upload","e","a","toDataURL","click","ref","onDragOver","preventDefault","onDragLeave","onDrop","dataTransfer","files","accept","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","getElementById","process","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.7cbf0a02.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/swatch-finder.0856352c.svg\";","module.exports = __webpack_public_path__ + \"static/media/download.e198a70e.svg\";","module.exports = __webpack_public_path__ + \"static/media/upload.f4ef2c0a.svg\";","import React, { useEffect, useCallback, useState, createRef } from \"react\";\nimport Color from \"./Color\";\nimport Header from \"./Header\";\n\nimport \"./App.css\";\nimport upload from \"./upload.svg\";\n\nimport { toHex, weighColors } from \"./helpers\";\nlet imgSrc;\n\nconst App = () => {\n    const isMobile = !!(window.innerWidth <= 800);\n    const handleFormClick = () => inputRef.current.click();\n    const [fileName, setFileName] = useState(\"\");\n    const [colors, setColors] = useState([]);\n    const [image, setImage] = useState(\"\");\n    const [size, setSize] = useState(8);\n    const photoContainer = createRef();\n    const canvasRef = createRef();\n    const inputRef = createRef();\n\n    const processImg = useCallback(\n        (file) => {\n            if (!file && !imgSrc) return;\n\n            if (file) {\n                imgSrc = URL.createObjectURL(file);\n            }\n\n            const canvas = canvasRef.current;\n            const ctx = canvas.getContext(\"2d\");\n            const img = new Image();\n            setFileName(file?.name ?? fileName);\n            setImage(imgSrc);\n\n            function draw() {\n                img.onload = () => pixelate();\n                img.src = imgSrc;\n            }\n\n            function pixelate() {\n                const height = (canvas.height = img.height);\n                const width = (canvas.width = img.width);\n                const heightOrWidth = height > width ? height : width;\n                const h = Math.round((height * size) / heightOrWidth);\n                const w = Math.round((width * size) / heightOrWidth);\n\n                ctx.drawImage(img, 0, 0, w, h);\n                ctx.imageSmoothingEnabled = false;\n                ctx.drawImage(canvas, 0, 0, w, h, 0, 0, width, height);\n\n                let colorArr = [];\n                for (let i = 0; i < w; i++) {\n                    for (let j = 0; j < h; j++) {\n                        let c = ctx.getImageData(\n                            (width / w) * i,\n                            (height / h) * j,\n                            1,\n                            1\n                        ).data;\n\n                        let color = {\n                            weight: 1,\n                            hex: toHex(c[0], c[1], c[2]),\n                        };\n                        colorArr.push(color);\n                    }\n                }\n\n                weighColors(colorArr);\n                colorArr = colorArr.sort((x, y) => x.weight - y.weight);\n                setColors(\n                    colorArr\n                        .slice(0, 15)\n                        .map((x) => <Color {...x} key={x.hex} />)\n                );\n            }\n            draw();\n        },\n        [canvasRef, fileName, size]\n    );\n\n    const onChange = (e) => {\n        if (!e.target.files.length) return;\n        processImg(e.target.files[0]);\n    };\n\n    const onDrop = (e) => {\n        e.preventDefault();\n        if (!e.dataTransfer) return;\n        processImg(e.dataTransfer.files[0]);\n        photoContainer.current.style.backgroundColor = \"rgba(51,51,51,1)\";\n    };\n\n    const highlight = (e) => {\n        e.preventDefault();\n        photoContainer.current.style.backgroundColor = \"rgba(255,255,255,.3)\";\n    };\n\n    const onDragLeave = (e) => {\n        e.preventDefault();\n        photoContainer.current.style.backgroundColor = \"rgba(51,51,51,1)\";\n    };\n\n    const changeSize = (e) => {\n        setSize(e.target.value);\n    };\n\n    useEffect(() => {\n        processImg();\n    }, [processImg, size]);\n\n    function downloadImage() {\n        var a = document.createElement(\"a\");\n        a.href = canvasRef.current.toDataURL(\"image/png\");\n        a.download = fileName;\n        document.body.appendChild(a);\n        a.click();\n    }\n\n    const imageEl =\n        image === \"\" ? (\n            <div>\n                <img src={upload} alt={fileName} />\n                <div className=\"image-text\">\n                    <span className=\"bold\">Choose a file</span> &nbsp;\n                    {!isMobile && \"or drag it here\"}\n                </div>\n            </div>\n        ) : (\n            <img className=\"image-file\" src={image} alt=\"select file\" />\n        );\n\n    return (\n        <div>\n            <Header\n                size={size}\n                changeSize={changeSize}\n                downloadImage={downloadImage}\n                hasImage={fileName !== \"\"}\n            />\n            <div className=\"container\">\n                <div\n                    ref={photoContainer}\n                    className=\"photo-container\"\n                    onDragOver={highlight}\n                    onDragLeave={onDragLeave}\n                    onDrop={onDrop}\n                >\n                    <div\n                        className={`photo${image === \"\" ? \" border\" : \"\"}`}\n                        onClick={handleFormClick}\n                    >\n                        {imageEl}\n                        <canvas ref={canvasRef}></canvas>\n                    </div>\n                </div>\n                <div className=\"results\">\n                    <div className=\"color-swatch\">{colors}</div>\n                </div>\n                <input\n                    ref={inputRef}\n                    accept=\"image/*\"\n                    type=\"file\"\n                    onChange={onChange}\n                />\n            </div>\n        </div>\n    );\n};\n\nexport default App;\n","export const weighColors = (colorArr) => {\n    for (let i = 0; i < colorArr.length; i++) {\n        let color = colorArr[i];\n        for (let j = i + 1; j < colorArr.length; j++) {\n            let color2 = colorArr[j];\n            if (colorDelta(color.hex, color2.hex) > 0.91) {\n                color.weight += color2.weight;\n                colorArr.splice(j--, 1);\n            }\n        }\n    }\n};\n\nexport const colorDelta = (hex1, hex2) => {\n    // get red/green/blue int values of hex1\n    var r1 = parseInt(hex1.substring(0, 2), 16);\n    var g1 = parseInt(hex1.substring(2, 4), 16);\n    var b1 = parseInt(hex1.substring(4, 6), 16);\n    // get red/green/blue int values of hex2\n    var r2 = parseInt(hex2.substring(0, 2), 16);\n    var g2 = parseInt(hex2.substring(2, 4), 16);\n    var b2 = parseInt(hex2.substring(4, 6), 16);\n    // calculate differences between reds, greens and blues\n    var r = 255 - Math.abs(r1 - r2);\n    var g = 255 - Math.abs(g1 - g2);\n    var b = 255 - Math.abs(b1 - b2);\n    // limit differences between 0 and 1\n    r /= 255;\n    g /= 255;\n    b /= 255;\n    // 0 means opposit colors, 1 means same colors\n    return (r + g + b) / 3;\n};\n\nconst rgbToHex = (rgb) => rgb.toString(16).padStart(2, \"0\");\n\nexport const toHex = (r, g, b) => rgbToHex(r) + rgbToHex(g) + rgbToHex(b);\n\nexport const copyToClipboard = (str) => {\n    const el = document.createElement(\"textarea\");\n    el.value = `#${str}`;\n    document.body.appendChild(el);\n    el.select();\n    document.execCommand(\"copy\");\n    document.body.removeChild(el);\n};\n\nexport const changeBackground = (str) => {\n    console.log(str);\n    document.body.style.backgroundColor = `#${str}`;\n};\n","import React from \"react\";\n\nimport { copyToClipboard, changeBackground } from \"./helpers\";\n\nconst Color = ({ hex, weight }) => {\n    const [content, setContent] = React.useState(hex);\n    const isMobile = !!(window.innerWidth < 800);\n    const size = Math.min(2.5, 1 + weight / 15);\n    const emphasis = isMobile ? `${50 * `${size}`}px` : `${80 * `${size}`}px`;\n\n    const colorStyle = {\n        backgroundColor: `#${hex}`,\n        height: emphasis,\n        width: emphasis,\n    };\n\n    const clickColor = () => {\n        copyToClipboard(hex);\n        setContent(\"copied\");\n        setTimeout(() => setContent(hex), 400);\n    };\n\n    return (\n        <div\n            onMouseOver={() => changeBackground(hex)}\n            className=\"color-block\"\n            onClick={clickColor}\n            style={colorStyle}\n        >\n            {content}\n        </div>\n    );\n};\n\nexport default Color;\n","import React from \"react\";\n\nimport logo from \"./swatch-finder.svg\";\nimport download from \"./download.svg\";\n\nconst Header = (props) => {\n    return (\n        <header>\n            <img className=\"logo\" src={logo} alt=\"swatch finder logo\"></img>\n            <div className=\"header-text\">\n                <p className=\"title\">Swatch Finder</p>\n                <a\n                    target=\"_blank\"\n                    className=\"credit\"\n                    rel=\"noopener noreferrer\"\n                    href=\"https://github.com/victoriousj\"\n                >\n                    <p>by victor d. johnson</p>\n                </a>\n            </div>\n            {props.hasImage && (\n                <div\n                    hidden={props.hasImage}\n                    style={{\n                        display: \"flex\",\n                        alignItems: \"center\",\n                        justifyContent: \"center\",\n                        flexDirection: \"row\",\n                    }}\n                >\n                    <div>\n                        <input\n                            onChange={props.changeSize}\n                            type=\"range\"\n                            id=\"size\"\n                            name=\"size\"\n                            min=\"1\"\n                            max=\"20\"\n                            value={props.size}\n                        />\n                        <label htmlFor=\"volume\">Pixel Size </label>\n                        <span>{props.size}</span>\n                    </div>\n                    <div style={{ marginLeft: \"20px\" }}>\n                        <button\n                            className=\"download-button\"\n                            onClick={props.downloadImage}\n                        >\n                            download\n                            <img src={download} alt={\"download\"} />\n                        </button>\n                    </div>\n                </div>\n            )}\n        </header>\n    );\n};\n\nexport default Header;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nserviceWorker.register();\n"],"sourceRoot":""}