{"version":3,"sources":["swatch-finder.svg","upload.svg","helpers.js","Color.js","Header.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","colorDelta","hex1","hex2","r1","parseInt","substring","g1","b1","r2","g2","b2","r","Math","abs","g","b","rgbToHex","rgb","toString","padStart","changeBackground","str","document","body","style","backgroundColor","Color","hex","weight","React","useState","content","setContent","isMobile","window","innerWidth","size","min","emphasis","colorStyle","height","width","onMouseOver","className","onClick","el","createElement","value","appendChild","select","execCommand","removeChild","copyToClipboard","setTimeout","Header","src","logo","alt","target","rel","href","App","colors","setColors","image","setImage","photoContainer","createRef","canvasRef","inputRef","processImg","file","imgSrc","URL","createObjectURL","canvas","current","ctx","getContext","img","Image","onload","heightOrWidth","h","w","drawImage","imageSmoothingEnabled","mozImageSmoothingEnabled","colorArr","i","j","c","getImageData","data","color","push","length","color2","splice","weighColors","sort","x","y","slice","map","key","pixelate","imageEl","upload","ref","onDragOver","e","preventDefault","onDragLeave","onDrop","dataTransfer","files","click","accept","type","onChange","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","getElementById","process","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.3d2ce007.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/swatch-finder.3a683617.svg\";","module.exports = __webpack_public_path__ + \"static/media/upload.51b27727.svg\";","export const weighColors = colorArr => {\r\n  for (let i = 0; i < colorArr.length; i++) {\r\n    let color = colorArr[i];\r\n    for (let j = i + 1; j < colorArr.length; j++) {\r\n      let color2 = colorArr[j];\r\n      if (colorDelta(color.hex, color2.hex) > 0.91) {\r\n        color.weight += color2.weight;\r\n        colorArr.splice(j--, 1);\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\nexport const colorDelta = (hex1, hex2) => {\r\n  // get red/green/blue int values of hex1\r\n  var r1 = parseInt(hex1.substring(0, 2), 16);\r\n  var g1 = parseInt(hex1.substring(2, 4), 16);\r\n  var b1 = parseInt(hex1.substring(4, 6), 16);\r\n  // get red/green/blue int values of hex2\r\n  var r2 = parseInt(hex2.substring(0, 2), 16);\r\n  var g2 = parseInt(hex2.substring(2, 4), 16);\r\n  var b2 = parseInt(hex2.substring(4, 6), 16);\r\n  // calculate differences between reds, greens and blues\r\n  var r = 255 - Math.abs(r1 - r2);\r\n  var g = 255 - Math.abs(g1 - g2);\r\n  var b = 255 - Math.abs(b1 - b2);\r\n  // limit differences between 0 and 1\r\n  r /= 255;\r\n  g /= 255;\r\n  b /= 255;\r\n  // 0 means opposit colors, 1 means same colors\r\n  return (r + g + b) / 3;\r\n};\r\n\r\nconst rgbToHex = rgb => rgb.toString(16).padStart(2, \"0\");\r\n\r\nexport const toHex = (r, g, b) => rgbToHex(r) + rgbToHex(g) + rgbToHex(b);\r\n\r\nexport const copyToClipboard = str => {\r\n  const el = document.createElement(\"textarea\");\r\n  el.value = `#${str}`;\r\n  document.body.appendChild(el);\r\n  el.select();\r\n  document.execCommand(\"copy\");\r\n  document.body.removeChild(el);\r\n};\r\n\r\nexport const changeBackground = str => {\r\n  document.body.style.backgroundColor = `#${str}`;\r\n};\r\n","import React from \"react\";\r\n\r\nimport { copyToClipboard, changeBackground } from \"./helpers\";\r\n\r\nconst Color = ({ hex, weight }) => {\r\n  const [content, setContent] = React.useState(hex);\r\n  const isMobile = !!(window.innerWidth < 800);\r\n  const size = Math.min(2.5, 1 + weight / 15);\r\n  const emphasis = isMobile ? `${50 * `${size}`}px` : `${80 * `${size}`}px`;\r\n\r\n  const colorStyle = {\r\n    backgroundColor: `#${hex}`,\r\n    height: emphasis,\r\n    width: emphasis\r\n  };\r\n\r\n  const clickColor = () => {\r\n    copyToClipboard(hex);\r\n    setContent(\"copied\");\r\n    setTimeout(() => setContent(hex), 400);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      onMouseOver={() => changeBackground(hex)}\r\n      className=\"color-block\"\r\n      onClick={clickColor}\r\n      style={colorStyle}\r\n    >\r\n      {content}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Color;\r\n","import React from \"react\";\r\n\r\nimport logo from \"./swatch-finder.svg\";\r\n\r\nconst Header = () => {\r\n  return (\r\n    <header>\r\n      <img className=\"logo\" src={logo} alt=\"swatch finder logo\"></img>\r\n      <div className=\"header-text\">\r\n        <p className=\"title\">Swatch Finder</p>\r\n        <a\r\n          target=\"_blank\"\r\n          className=\"credit\"\r\n          rel=\"noopener noreferrer\"\r\n          href=\"https://github.com/victoriousj\"\r\n        >\r\n          <p>by victor d. johnson</p>\r\n        </a>\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport Color from \"./Color\";\r\nimport Header from \"./Header\";\r\n\r\nimport \"./App.css\";\r\nimport upload from \"./upload.svg\";\r\n\r\nimport { toHex, weighColors, changeBackground } from \"./helpers\";\r\n\r\nconst App = () => {\r\n  const handleFormClick = () => inputRef.current.click();\r\n  const [colors, setColors] = React.useState([]);\r\n  const [image, setImage] = React.useState(\"\");\r\n  const photoContainer = React.createRef();\r\n  const canvasRef = React.createRef();\r\n  const inputRef = React.createRef();\r\n\r\n  const processImg = file => {\r\n    if (!file) return;\r\n\r\n    const imgSrc = URL.createObjectURL(file);\r\n    const canvas = canvasRef.current;\r\n    const ctx = canvas.getContext(\"2d\");\r\n    const img = new Image();\r\n    setImage(imgSrc);\r\n\r\n    function draw() {\r\n      img.onload = () => pixelate();\r\n      img.src = imgSrc;\r\n    }\r\n\r\n    function pixelate() {\r\n      const size = 10;\r\n      const height = (canvas.height = img.height);\r\n      const width = (canvas.width = img.width);\r\n      const heightOrWidth = height > width ? height : width;\r\n      const h = (height * size) / heightOrWidth;\r\n      const w = (width * size) / heightOrWidth;\r\n\r\n      ctx.drawImage(img, 0, 0, w, h);\r\n      ctx.imageSmoothingEnabled = false;\r\n      ctx.mozImageSmoothingEnabled = false;\r\n      ctx.drawImage(canvas, 0, 0, w, h, 0, 0, width, height);\r\n\r\n      let colorArr = [];\r\n      for (let i = 0; i < w; i++) {\r\n        for (let j = 0; j < h; j++) {\r\n          let c = ctx.getImageData(\r\n            (width / w) * i + width / (w * 2),\r\n            (height / h) * j + height / (h * 2),\r\n            1,\r\n            1\r\n          ).data;\r\n\r\n          let color = {\r\n            weight: 1,\r\n            hex: toHex(c[0], c[1], c[2])\r\n          };\r\n          colorArr.push(color);\r\n        }\r\n      }\r\n\r\n      weighColors(colorArr);\r\n      colorArr = colorArr.sort((x, y) => x.weight - y.weight);\r\n      changeBackground(colorArr[colorArr.length - 1].hex);\r\n      setColors(colorArr.slice(0, 15).map(x => <Color {...x} key={x.hex} />));\r\n    }\r\n    draw();\r\n    inputRef.current.value = \"\";\r\n  };\r\n\r\n  const onChange = e => {\r\n    if (!e.target.files.length) return;\r\n    processImg(e.target.files[0]);\r\n  };\r\n\r\n  const onDrop = e => {\r\n    e.preventDefault();\r\n    if (!e.dataTransfer) return;\r\n    processImg(e.dataTransfer.files[0]);\r\n    photoContainer.current.style.backgroundColor = \"rgba(51,51,51,1)\";\r\n  };\r\n\r\n  const highlight = e => {\r\n    e.preventDefault();\r\n    photoContainer.current.style.backgroundColor = \"rgba(255,255,255,.3)\";\r\n  };\r\n\r\n  const onDragLeave = e => {\r\n    e.preventDefault();\r\n    photoContainer.current.style.backgroundColor = \"rgba(51,51,51,1)\";\r\n  };\r\n\r\n  const imageEl =\r\n    image === \"\" ? (\r\n      <div>\r\n        <img src={upload} alt=\"\" />\r\n        <div className=\"image-text\">\r\n          <span className=\"bold\">Choose a file</span>&nbsp; or drag it here\r\n        </div>\r\n      </div>\r\n    ) : (\r\n      <img className=\"image-file\" src={image} alt=\"select file\" />\r\n    );\r\n\r\n  return (\r\n    <div>\r\n      <Header />\r\n      <div className=\"container\">\r\n        <div\r\n          ref={photoContainer}\r\n          className=\"photo-container\"\r\n          onDragOver={highlight}\r\n          onDragLeave={onDragLeave}\r\n          onDrop={onDrop}\r\n        >\r\n          <div\r\n            className={`photo ${image === \"\" ? \"border\" : \"\"}`}\r\n            onClick={handleFormClick}\r\n          >\r\n            {imageEl}\r\n            <canvas ref={canvasRef}></canvas>\r\n          </div>\r\n        </div>\r\n        <div className=\"results\">\r\n          <div className=\"color-swatch\">{colors}</div>\r\n        </div>\r\n        <input\r\n          ref={inputRef}\r\n          accept=\"image/*\"\r\n          type=\"file\"\r\n          onChange={onChange}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nserviceWorker.register();\n"],"sourceRoot":""}